# 클러스터 설정 템플릿
# 이 파일을 복사하여 실제 환경에 맞게 수정하세요

# 클러스터 기본 정보
cluster:
  name: "my-k8s-cluster"                    # 클러스터 이름
  region: "us-west-2"                       # 클러스터 리전 (선택사항)
  environment: "production"                 # 환경 (dev/staging/production)
  
# 전역 모니터링 설정
monitoring:
  # 메트릭 수집 간격
  scrapeInterval: "30s"
  
  # 데이터 보존 기간
  retention:
    metrics: "30d"
    logs: "30d"
    traces: "7d"
  
  # 리소스 제한
  resources:
    # 낮은 리소스 환경 (개발/테스트)
    small:
      alloy-logs:
        requests: { memory: "128Mi", cpu: "100m" }
        limits: { memory: "256Mi", cpu: "200m" }
      alloy-metrics:
        requests: { memory: "256Mi", cpu: "200m" }
        limits: { memory: "512Mi", cpu: "500m" }
      alloy-receiver:
        requests: { memory: "128Mi", cpu: "100m" }
        limits: { memory: "256Mi", cpu: "200m" }
    
    # 중간 리소스 환경 (스테이징)
    medium:
      alloy-logs:
        requests: { memory: "256Mi", cpu: "200m" }
        limits: { memory: "512Mi", cpu: "500m" }
      alloy-metrics:
        requests: { memory: "512Mi", cpu: "500m" }
        limits: { memory: "1Gi", cpu: "1000m" }
      alloy-receiver:
        requests: { memory: "256Mi", cpu: "200m" }
        limits: { memory: "512Mi", cpu: "500m" }
    
    # 높은 리소스 환경 (프로덕션)
    large:
      alloy-logs:
        requests: { memory: "512Mi", cpu: "500m" }
        limits: { memory: "1Gi", cpu: "1000m" }
      alloy-metrics:
        requests: { memory: "1Gi", cpu: "1000m" }
        limits: { memory: "2Gi", cpu: "2000m" }
      alloy-receiver:
        requests: { memory: "512Mi", cpu: "500m" }
        limits: { memory: "1Gi", cpu: "1000m" }

# 네트워킹 설정
networking:
  # 서비스 타입 설정
  serviceType: "ClusterIP"  # ClusterIP, NodePort, LoadBalancer
  
  # Ingress 설정
  ingress:
    enabled: false
    className: "nginx"
    annotations:
      nginx.ingress.kubernetes.io/rewrite-target: /
    
  # 네트워크 정책
  networkPolicy:
    enabled: false
    allowedNamespaces: []

# 보안 설정
security:
  # Pod 보안 컨텍스트
  podSecurityContext:
    runAsNonRoot: true
    runAsUser: 10001
    runAsGroup: 10001
    fsGroup: 10001
  
  # 컨테이너 보안 컨텍스트
  securityContext:
    allowPrivilegeEscalation: false
    readOnlyRootFilesystem: true
    capabilities:
      drop: ["ALL"]

# 저장소 설정
storage:
  # 기본 스토리지 클래스
  storageClass: ""  # 기본 스토리지 클래스 사용
  
  # 볼륨 크기
  sizes:
    prometheus: "50Gi"
    loki: "20Gi"
    grafana: "10Gi"
    alertmanager: "10Gi"

# 노드 선택 및 배치
placement:
  # 노드 셀렉터
  nodeSelector: {}
  
  # Tolerations
  tolerations: []
  
  # Affinity
  affinity:
    # 모니터링 컴포넌트들을 서로 다른 노드에 배치
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
        - weight: 100
          podAffinityTerm:
            labelSelector:
              matchExpressions:
                - key: app.kubernetes.io/component
                  operator: In
                  values: ["monitoring"]
            topologyKey: kubernetes.io/hostname
