# Prometheus Stack Values
# This includes Prometheus, Grafana, and AlertManager

grafana:
  enabled: true
  adminPassword: admin
  
  # Use latest Grafana image (no tag specified = latest)
  # image:
  #   tag: "12.1.3"
  
  # Security context
  securityContext:
    runAsNonRoot: true
    runAsUser: 472
    fsGroup: 472
  
  # Pod security context
  podSecurityContext:
    runAsNonRoot: true
    runAsUser: 472
    fsGroup: 472
  
  # Disable problematic init container
  initChownData:
    enabled: false
  
  # Grafana configuration
  grafana.ini:
    server:
      domain: grafana.local
      root_url: http://grafana.local
    
  # Enable persistence for Grafana
  persistence:
    enabled: true
    type: pvc
    size: 10Gi
    
  # Service configuration
  service:
    type: ClusterIP
    port: 80
    
  # Ingress configuration (disabled here, using separate ingress file)
  ingress:
    enabled: false
    
  # Default dashboards
  defaultDashboardsEnabled: true
  
  # Sidecar configuration for dashboard auto-discovery
  sidecar:
    dashboards:
      enabled: true
      label: grafana_dashboard
      labelValue: "1"
    datasources:
      enabled: true
      label: grafana_datasource
      labelValue: "1"

prometheus:
  enabled: true
  
  prometheusSpec:
    # Use stable Prometheus image (no tag specified = latest)
    # image:
    #   tag: "v2.57.1"
    
    # Retention settings
    retention: 30d
    retentionSize: 50GiB
    
    # Storage
    storageSpec:
      volumeClaimTemplate:
        spec:
          accessModes: ["ReadWriteOnce"]
          resources:
            requests:
              storage: 50Gi
              
    # Resources
    resources:
      limits:
        cpu: 2000m
        memory: 8Gi
      requests:
        cpu: 1000m
        memory: 4Gi
        
    # Service Monitor selector
    serviceMonitorSelectorNilUsesHelmValues: false
    podMonitorSelectorNilUsesHelmValues: false
    ruleSelectorNilUsesHelmValues: false
    
  # Ingress for Prometheus
  ingress:
    enabled: true
    ingressClassName: nginx
    hosts:
      - prometheus.local
    paths:
      - /

alertmanager:
  enabled: true
  
  alertmanagerSpec:
    # Use stable AlertManager image (no tag specified = latest)
    # image:
    #   tag: "v0.28.1"
    
    # Storage
    storage:
      volumeClaimTemplate:
        spec:
          accessModes: ["ReadWriteOnce"]
          resources:
            requests:
              storage: 10Gi
              
  # Ingress for AlertManager
  ingress:
    enabled: true
    ingressClassName: nginx
    hosts:
      - alertmanager.local
    paths:
      - /

# Node Exporter
nodeExporter:
  enabled: true
  # Use latest image (no tag specified = latest)
  # image:
  #   tag: "v1.10.0"

# Kube State Metrics
kubeStateMetrics:
  enabled: true
  # Use latest image (no tag specified = latest)
  # image:
  #   tag: "v2.16.0"

# Default rules
defaultRules:
  create: true
  rules:
    alertmanager: true
    etcd: true
    configReloaders: true
    general: true
    k8s: true
    kubeApiserver: true
    kubeApiserverAvailability: true
    kubeApiserverSlos: true
    kubelet: true
    kubeProxy: true
    kubePrometheusGeneral: true
    kubePrometheusNodeRecording: true
    kubernetesApps: true
    kubernetesResources: true
    kubernetesStorage: true
    kubernetesSystem: true
    network: true
    node: true
    nodeExporterAlerting: true
    nodeExporterRecording: true
    prometheus: true
    prometheusOperator: true
